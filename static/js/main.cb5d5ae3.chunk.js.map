{"version":3,"sources":["components/Question/Question.js","components/Stream/Stream.js","App.js","reportWebVitals.js","index.js","components/Question/styles.module.css","components/Stream/styles.module.css"],"names":["Question","question","answer","toggleAnswer","title","options","className","styles","questionContainer","questionTitle","value","onChange","val","Stream","stream","description","plans","logo","streamContainer","streamInfo","streamTitle","streamDescription","map","plan","i","price","planContainer","alt","src","App","useState","screenAnswer","toggleScreenAnswer","genreAnswer","toggleGenreAnswer","offlineAnswer","toggleOfflineAnswer","qualityAnswer","toggleQualityAnswer","setStream","Netflix","screen","genre","offline","quality","Peacock","Disney","Amazon","data","Name","id","image","getTotalScore","totalScore","onClick","label","streams","highestScore","Math","max","apply","o","filter","obj","console","log","window","alert","features","hideItemOption","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cb5d5ae3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport Select from \"react-select\";\r\n\r\nconst Question = ({ question, answer, toggleAnswer }) => {\r\n  const { title, options } = question;\r\n\r\n  const handleChange = (val) => {\r\n    toggleAnswer(val);\r\n  };\r\n  return (\r\n    <div className={styles.questionContainer}>\r\n      <p className={styles.questionTitle}>{title}</p>\r\n      <Select value={answer} onChange={handleChange} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Question };\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst Stream = ({ stream }) => {\r\n  const { title, description, plans, logo } = stream;\r\n\r\n  const renderPlans = () => {\r\n    return plans.map((plan, i) => {\r\n      const { title, price } = plan;\r\n\r\n      return (\r\n        <div className={styles.planContainer} key={i}>\r\n          <h4>{title}</h4>\r\n          <p>{price}</p>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.streamContainer}>\r\n      <div className={styles.streamInfo}>\r\n        <h3 className={styles.streamTitle}>{title}</h3>\r\n        <p className={styles.streamDescription}>{description}</p>\r\n        <div className={styles.plans}>{renderPlans()}</div>\r\n      </div>\r\n      <img alt=\"logo\" src={logo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Stream };\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport { BsArrowRight, BsArrowLeft } from \"react-icons/bs\";\r\nimport CompareChart from \"react-comparison-table\";\r\nimport { Question, Stream } from \"./components\";\r\n\r\nfunction App() {\r\n  const [screenAnswer, toggleScreenAnswer] = useState(null);\r\n  const [genreAnswer, toggleGenreAnswer] = useState(null);\r\n  const [offlineAnswer, toggleOfflineAnswer] = useState(null);\r\n  const [qualityAnswer, toggleQualityAnswer] = useState(null);\r\n\r\n  const [stream, setStream] = useState(null);\r\n\r\n  const screenQuestion = {\r\n    title: \"How many people will be on the account?\",\r\n    options: [\r\n      { label: 1, value: 1 },\r\n      { label: 2, value: 2 },\r\n      { label: 3, value: 3 },\r\n      { label: 4, value: 4 }\r\n    ]\r\n  };\r\n\r\n  const genreQuestion = {\r\n    title: \"What kind of shows do you want to watch?\",\r\n    options: [\r\n      { label: \"Kids\", value: \"Kids\" },\r\n      { label: \"Adult\", value: \"Adult\" },\r\n      { label: \"Both\", value: \"Both\" }\r\n    ]\r\n  };\r\n\r\n  const offlineQuestion = {\r\n    title: \"Would you like to offline viewing content?\",\r\n    options: [\r\n      { label: \"Yes\", value: \"Yes\" },\r\n      { label: \"No\", value: \"No\" }\r\n    ]\r\n  };\r\n\r\n  const qualityQuestion = {\r\n    title: \"How important is the quality of the resolution for you?\",\r\n    options: [\r\n      { label: \"Not Important\", value: \"Not Important\" },\r\n      { label: \"Important\", value: \"Important\" },\r\n      { label: \"Very Important\", value: \"Very Important\" }\r\n    ]\r\n  };\r\n\r\n  const Netflix = {\r\n    title: \"Netflix\",\r\n    description:\r\n      \"Netflix is a subscription-based streaming service that allows our members to watch TV shows and movies without commercials on an internet-connected device. You can also download TV shows and movies to your iOS, Android, or Windows 10 device and watch without an internet connection.Netflix is a subscription-based streaming service that allows our members to watch TV shows and movies without commercials on an internet-connected device. You can also download TV shows and movies to your iOS, Android, or Windows 10 device and watch without an internet connection.\",\r\n    plans: [\r\n      { title: \"Basic\", price: \"$8.99/mo\" },\r\n      { title: \"Premium\", price: \"$17.99/mo\" }\r\n    ],\r\n    screen: 4,\r\n    genre: \"Both\",\r\n    offline: \"Yes\",\r\n    quality: \"Very Important\",\r\n    logo:\r\n      \"https://cdn.vox-cdn.com/thumbor/AwKSiDyDnwy_qoVdLPyoRPUPo00=/39x0:3111x2048/1400x1400/filters:focal(39x0:3111x2048):format(png)/cdn.vox-cdn.com/uploads/chorus_image/image/49901753/netflixlogo.0.0.png\"\r\n  };\r\n\r\n  const Peacock = {\r\n    title: \"Peacock\",\r\n    description:\r\n      \"With Peacock, you can stream hundreds of hit movies, iconic TV shows, current NBC hits, and Peacock Channels 24/7, plus daily live news, late night, and pop culture to satisfy your FOMO. You'll also get access to live sports, kids' movies and shows, hit Spanish-language TV shows and news from Telemundo—all for free.\",\r\n    plans: [\r\n      { title: \"Basic\", price: \"Free\" },\r\n      { title: \"Premium\", price: \"$4.99/mo\" },\r\n      { title: \"Premium Plus\", price: \"$9.99/mo\" }\r\n    ],\r\n    screen: 4,\r\n    genre: \"Adult\",\r\n    offline: \"Yes\",\r\n    quality: \"Important\",\r\n    logo:\r\n      \"https://cdn.vox-cdn.com/thumbor/G0CLHzhFWIcwEdT0lK_cXPn3Jgs=/0x0:1000x601/1200x800/filters:focal(420x221:580x381)/cdn.vox-cdn.com/uploads/chorus_image/image/65262553/peacock.0.png\"\r\n  };\r\n\r\n  const Disney = {\r\n    title: \"Disney +\",\r\n    description:\r\n      \"Disney Plus is an on-demand streaming service with a growing collection of movies and shows from Disney, Pixar, Marvel, Star Wars, National Geographic, and 20th Century Fox.\",\r\n    plans: [\r\n      { title: \"Basic\", price: \"$8.00/mo\" },\r\n      { title: \"Hulu Bundle\", price: \"$14.00/mo\" },\r\n      { title: \"Hulu Live TV Bundle\", price: \"$72.00/mo\" }\r\n    ],\r\n    screen: 4,\r\n    offline: \"No\",\r\n    quality: \"Very Important\",\r\n    genre: \"Kids\",\r\n    logo:\r\n      \"https://cdn141.picsart.com/338357049046211.png?type=webp&to=min&r=640\"\r\n  };\r\n\r\n  const Amazon = {\r\n    title: \"Amazon Prime Video\",\r\n    description:\r\n      \"Prime Video is a video streaming service available for Amazon Prime members. With an eligible Amazon Prime membership, you have access to thousands of Prime Video titles at no additional cost.\",\r\n    plans: [{ title: \"Basic\", price: \"$8.99/mo\" }],\r\n    screen: 1,\r\n    offline: \"Yes\",\r\n    quality: \"Very Important\",\r\n    genre: \"Both\",\r\n    logo: \"https://www.soda.com/wp-content/uploads/2019/12/prime-video.jpg\"\r\n  };\r\n\r\n  const data = [\r\n    {\r\n      Name: \"Netflix\",\r\n      id: \"1\",\r\n      image: Netflix.logo,\r\n      \"HDR/4K\": \"Yes\",\r\n      \"Max Number of Screens\": \"4\",\r\n      \"Base Price\": \"$8.99/mo\",\r\n      \"Offline Download\": \"Yes\",\r\n      \"Watch Party\": \"No\",\r\n      \"Ads\": \"No\",\r\n      \"Strengths\": \"Brand reputation, original content, DVD rentals, variety of subscription options\",\r\n      \"Weaknesses\": \"Limited copyrights, increasing debt, primarily NA market\",\r\n      \"2020 Emmy Nominations\": \"160\"\r\n    },\r\n    {\r\n      Name: \"Amazon\",\r\n      id: \"2\",\r\n      image: Amazon.logo,\r\n      \"HDR/4K\": \"Yes\",\r\n      \"Max Number of Screens\": \"2\",\r\n      \"Base Price\": \"$8.99/mo\",\r\n      \"Offline Download\": \"Yes\",\r\n      \"Watch Party\": \"Yes\",\r\n      \"Ads\": \"No\",\r\n      \"Strengths\": \"Original content, live sports/news, access to Prime Day discounts\",\r\n      \"Weaknesses\": \"Not much high-quality content, little third-party content, bad UI/UX\",\r\n      \"2020 Emmy Nominations\": \"47\"\r\n    },\r\n    {\r\n      Name: \"Disney\",\r\n      id: \"3\",\r\n      image: Disney.logo,\r\n      \"HDR/4K\": \"Yes\",\r\n      \"Max Number of Screens\": \"4\",\r\n      \"Base Price\": \"$8.00/mo\",\r\n      \"Offline Download\": \"No\",\r\n      \"Watch Party\": \"Yes\",\r\n      \"Ads\": \"No\",\r\n      \"Strengths\": \"Brand reputation, high quality service, in-depth search, bundled plan with other streaming services\",\r\n      \"Weaknesses\": \"Limited to Disney exclusives, parental efforts to limit technology use, strong competitors\",\r\n      \"2020 Emmy Nominations\": \"145\"\r\n    },\r\n    {\r\n      Name: \"Peacock\",\r\n      id: \"4\",\r\n      image: Peacock.logo,\r\n      \"HDR/4K\": \"No\",\r\n      \"Max Number of Screens\": \"Unlimited\",\r\n      \"Base Price\": \"$5.00/mo\",\r\n      \"Offline Download\": \"Yes\",\r\n      \"Watch Party\": \"No\",\r\n      \"Ads\": \"Yes\",\r\n      \"Strengths\": \"Many pricing tiers, free tier with few limitations, live sports\",\r\n      \"Weaknesses\": \"Not much original content and smaller movie selection\",\r\n      \"2020 Emmy Nominations\": \"0\"\r\n    }\r\n  ];\r\n\r\n  const submit = () => {\r\n    if (screenAnswer && genreAnswer && qualityAnswer && offlineAnswer) {\r\n      getTotalScore(Netflix);\r\n      getTotalScore(Disney);\r\n      getTotalScore(Peacock);\r\n      getTotalScore(Amazon);\r\n\r\n      let streams = [Netflix, Disney, Peacock, Amazon];\r\n\r\n      let highestScore = Math.max.apply(\r\n        Math,\r\n        streams.map(function (o) {\r\n          return o.totalScore;\r\n        })\r\n      );\r\n\r\n      let stream = streams.filter((obj) => {\r\n        return obj.totalScore === highestScore;\r\n      });\r\n\r\n      stream = stream[0];\r\n\r\n      console.log(stream);\r\n\r\n      setStream(stream);\r\n    } else {\r\n      window.alert(\"Please answer all questions.\");\r\n    }\r\n  };\r\n\r\n  const getTotalScore = (stream) => {\r\n    let totalScore = 0;\r\n\r\n    if (screenAnswer.value >= stream.screen) {\r\n      totalScore += 1;\r\n    }\r\n\r\n    if (stream.genre === genreAnswer.value) {\r\n      totalScore += 1;\r\n\r\n      if (genreAnswer.value === \"Kids\") {\r\n        totalScore += 1;\r\n      }\r\n    }\r\n\r\n    if (stream.quality === qualityAnswer.value) {\r\n      totalScore += 1;\r\n    }\r\n\r\n    if (stream.offline === offlineAnswer.value) {\r\n      totalScore += 1;\r\n    }\r\n\r\n    stream.totalScore = totalScore;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className={\"title\"}>Best Streaming Service For You</h1>\r\n      <p className={\"description\"}>\r\n        Tell us your preferences and we'll find a streaming service that meets\r\n        your needs.\r\n      </p>\r\n      {stream ? (\r\n        <div>\r\n          <Stream stream={stream} />\r\n          <div\r\n            className=\"return-container\"\r\n            onClick={() => {\r\n              setStream(null);\r\n            }}\r\n          >\r\n            <BsArrowLeft />\r\n            <p>Return</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"questions-container\">\r\n          <Question\r\n            question={genreQuestion}\r\n            answer={genreAnswer}\r\n            toggleAnswer={toggleGenreAnswer}\r\n          />\r\n          <Question\r\n            question={screenQuestion}\r\n            answer={screenAnswer}\r\n            toggleAnswer={toggleScreenAnswer}\r\n          />\r\n          <Question\r\n            question={offlineQuestion}\r\n            answer={offlineAnswer}\r\n            toggleAnswer={toggleOfflineAnswer}\r\n          />\r\n          <Question\r\n            question={qualityQuestion}\r\n            answer={qualityAnswer}\r\n            toggleAnswer={toggleQualityAnswer}\r\n          />\r\n          <div className=\"button-container\">\r\n            <div className=\"submit-button\" onClick={submit}>\r\n              <p>Submit</p>\r\n              <BsArrowRight className=\"arrow\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"chart\">\r\n            <CompareChart\r\n              data={data}\r\n              features={[\r\n                \"Strengths\",\r\n                \"Weaknesses\",\r\n                \"HDR/4K\",\r\n                \"Max Number of Screens\",\r\n                \"Base Price\",\r\n                \"Offline Download\",\r\n                \"Watch Party\",\r\n                \"Ads\",\r\n                \"2020 Emmy Nominations\"\r\n              ]}\r\n              hideItemOption={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionContainer\":\"styles_questionContainer__zAmPW\",\"questionTitle\":\"styles_questionTitle__2I43G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"streamContainer\":\"styles_streamContainer__3n0WM\",\"plans\":\"styles_plans__2g_Gj\",\"planContainer\":\"styles_planContainer__2xV8r\",\"streamDescription\":\"styles_streamDescription__2eDPl\"};"],"sourceRoot":""}